{
  "openapi": "3.0.0",
  "info": {
    "title": "Laravel API Kit - Project & Task Management",
    "description": "A comprehensive RESTful API for managing projects and tasks with authentication, built with Laravel 11",
    "version": "1.0.0",
    "contact": {
      "email": "admin@laravelapikit.com",
      "name": "Laravel API Kit Support"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Local Development Server"
    }
  ],
  "components": {
    "securitySchemes": {
      "sanctum": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Laravel Sanctum Bearer Token Authentication"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "name": {"type": "string", "example": "John Doe"},
          "email": {"type": "string", "format": "email", "example": "john@example.com"},
          "email_verified_at": {"type": "string", "format": "date-time", "nullable": true},
          "created_at": {"type": "string", "format": "date-time", "example": "2024-01-01T00:00:00.000000Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2024-01-01T00:00:00.000000Z"}
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "name": {"type": "string", "example": "Sample Project"},
          "description": {"type": "string", "example": "Project description"},
          "status": {"type": "string", "enum": ["pending", "active", "completed", "cancelled"], "example": "pending"},
          "user_id": {"type": "integer", "example": 1},
          "start_date": {"type": "string", "format": "date", "example": "2024-01-01"},
          "end_date": {"type": "string", "format": "date", "example": "2024-12-31"},
          "created_at": {"type": "string", "format": "date-time", "example": "2024-01-01T00:00:00.000000Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2024-01-01T00:00:00.000000Z"}
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {"type": "integer", "example": 1},
          "title": {"type": "string", "example": "Sample Task"},
          "description": {"type": "string", "example": "Task description"},
          "status": {"type": "string", "enum": ["todo", "in_progress", "completed", "cancelled"], "example": "todo"},
          "priority": {"type": "string", "enum": ["low", "medium", "high", "urgent"], "example": "medium"},
          "project_id": {"type": "integer", "example": 1},
          "user_id": {"type": "integer", "example": 1},
          "due_date": {"type": "string", "format": "date", "example": "2024-01-15"},
          "created_at": {"type": "string", "format": "date-time", "example": "2024-01-01T00:00:00.000000Z"},
          "updated_at": {"type": "string", "format": "date-time", "example": "2024-01-01T00:00:00.000000Z"}
        }
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "operationId": "register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "password_confirmation"],
                "properties": {
                  "name": {"type": "string", "example": "John Doe"},
                  "email": {"type": "string", "format": "email", "example": "john@example.com"},
                  "password": {"type": "string", "format": "password", "example": "password123"},
                  "password_confirmation": {"type": "string", "format": "password", "example": "password123"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {"$ref": "#/components/schemas/User"},
                    "token": {"type": "string", "example": "1|abc123..."}
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "The given data was invalid."},
                    "errors": {"type": "object"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "operationId": "login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {"type": "string", "format": "email", "example": "john@example.com"},
                  "password": {"type": "string", "format": "password", "example": "password123"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {"$ref": "#/components/schemas/User"},
                    "token": {"type": "string", "example": "1|abc123..."}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/api/projects": {
      "get": {
        "tags": ["Projects"],
        "summary": "Get all projects",
        "operationId": "getProjects",
        "security": [{"sanctum": []}],
        "responses": {
          "200": {
            "description": "Projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Project"}
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Projects"],
        "summary": "Create a new project",
        "operationId": "createProject",
        "security": [{"sanctum": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {"type": "string", "example": "New Project"},
                  "description": {"type": "string", "example": "Project description"},
                  "status": {"type": "string", "enum": ["pending", "active", "completed", "cancelled"], "example": "pending"},
                  "start_date": {"type": "string", "format": "date", "example": "2024-01-01"},
                  "end_date": {"type": "string", "format": "date", "example": "2024-12-31"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Project"}
              }
            }
          }
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks",
        "operationId": "getTasks",
        "security": [{"sanctum": []}],
        "responses": {
          "200": {
            "description": "Tasks retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {"$ref": "#/components/schemas/Task"}
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "operationId": "createTask",
        "security": [{"sanctum": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title"],
                "properties": {
                  "title": {"type": "string", "example": "New Task"},
                  "description": {"type": "string", "example": "Task description"},
                  "status": {"type": "string", "enum": ["todo", "in_progress", "completed", "cancelled"], "example": "todo"},
                  "priority": {"type": "string", "enum": ["low", "medium", "high", "urgent"], "example": "medium"},
                  "project_id": {"type": "integer", "example": 1},
                  "due_date": {"type": "string", "format": "date", "example": "2024-01-15"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Task"}
              }
            }
          }
        }
      }
    }
  }
}
